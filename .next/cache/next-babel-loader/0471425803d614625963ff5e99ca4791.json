{"ast":null,"code":"var _jsxFileName = \"/Users/cloud/Desktop/Natasha/yumtashweb/yum-tash-web/pages/_document.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport Document, { Head, Main, NextScript } from 'next/document'; // import FavIcon from '../assets/favicon.png'\n// import { GA_TRACKING_ID } from '../lib/gtag'\n\nexport default class CustomDocument extends Document {\n  static async getInitialProps(ctx) {\n    // const sheet = new ServerStyleSheet()\n    const originalRenderPage = ctx.renderPage;\n    const initialProps = await Document.getInitialProps(ctx); // Check if in production\n\n    const isProduction = false;\n    return _objectSpread(_objectSpread({}, initialProps), {}, {\n      isProduction\n    });\n  }\n\n  render() {\n    const {\n      isProduction\n    } = this.props;\n    return __jsx(\"html\", {\n      lang: \"en\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 7\n      }\n    }, __jsx(Head, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }\n    }, __jsx(\"link\", {\n      href: \"https://fonts.googleapis.com/css2?family=Major+Mono+Display&family=Roboto+Slab:wght@500&display=swap\",\n      rel: \"stylesheet\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }\n    })), __jsx(\"body\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }\n    }, __jsx(Main, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }\n    }), __jsx(NextScript, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}","map":{"version":3,"sources":["/Users/cloud/Desktop/Natasha/yumtashweb/yum-tash-web/pages/_document.js"],"names":["Document","Head","Main","NextScript","CustomDocument","getInitialProps","ctx","originalRenderPage","renderPage","initialProps","isProduction","render","props"],"mappings":";;;;;;;;;;AAAA,OAAOA,QAAP,IAAmBC,IAAnB,EAAyBC,IAAzB,EAA+BC,UAA/B,QAAiD,eAAjD,C,CACA;AAEA;;AAEA,eAAe,MAAMC,cAAN,SAA6BJ,QAA7B,CAAsC;AACnD,eAAaK,eAAb,CAA6BC,GAA7B,EAAkC;AAChC;AACA,UAAMC,kBAAkB,GAAGD,GAAG,CAACE,UAA/B;AAEA,UAAMC,YAAY,GAAG,MAAMT,QAAQ,CAACK,eAAT,CAAyBC,GAAzB,CAA3B,CAJgC,CAMhC;;AACA,UAAMI,YAAY,QAAlB;AAEA,2CACKD,YADL;AAEEC,MAAAA;AAFF;AAID;;AAEDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAED,MAAAA;AAAF,QAAmB,KAAKE,KAA9B;AAEA,WACE;AAAM,MAAA,IAAI,EAAC,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIE;AAAM,MAAA,IAAI,EAAC,sGAAX;AAAkH,MAAA,GAAG,EAAC,YAAtH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,CADF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CAPF,CADF;AAcD;;AAjCkD","sourcesContent":["import Document, { Head, Main, NextScript } from 'next/document'\n// import FavIcon from '../assets/favicon.png'\n\n// import { GA_TRACKING_ID } from '../lib/gtag'\n\nexport default class CustomDocument extends Document {\n  static async getInitialProps(ctx) {\n    // const sheet = new ServerStyleSheet()\n    const originalRenderPage = ctx.renderPage\n\n    const initialProps = await Document.getInitialProps(ctx)\n\n    // Check if in production\n    const isProduction = process.env.NODE_ENV === 'production'\n\n    return {\n      ...initialProps,\n      isProduction,\n    }\n  }\n\n  render() {\n    const { isProduction } = this.props\n\n    return (\n      <html lang=\"en\">\n        <Head>\n          {/* <link rel=\"shortcut icon\" type=\"image/x-icon\" href={FavIcon} /> */}\n\n          {/* We only want to add the scripts if in production */}\n          <link href=\"https://fonts.googleapis.com/css2?family=Major+Mono+Display&family=Roboto+Slab:wght@500&display=swap\" rel=\"stylesheet\"></link>\n        </Head>\n        <body>\n          <Main />\n          <NextScript />\n        </body>\n      </html>\n    )\n  }\n}"]},"metadata":{},"sourceType":"module"}