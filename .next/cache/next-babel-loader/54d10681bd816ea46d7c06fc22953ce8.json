{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _s = $RefreshSig$();\n\nimport React from 'react';\nexport var useViewport = function useViewport() {\n  _s();\n\n  var _React$useState = React.useState(window.innerWidth),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      width = _React$useState2[0],\n      setWidth = _React$useState2[1];\n\n  React.useEffect(function () {\n    var handleWindowResize = function handleWindowResize() {\n      return setWidth(window.innerWidth);\n    };\n\n    window.addEventListener(\"resize\", handleWindowResize);\n    return function () {\n      return window.removeEventListener(\"resize\", handleWindowResize);\n    };\n  }, []); // Return the width so we can use it in our components\n\n  return width;\n};\n\n_s(useViewport, \"G7kj69GIMHEKUWgFcp/hGy+ukY8=\");","map":{"version":3,"sources":["/Users/cloud/Desktop/Natasha/yumtashweb/yum-tash-web/components/ViewPort.jsx"],"names":["React","useViewport","useState","window","innerWidth","width","setWidth","useEffect","handleWindowResize","addEventListener","removeEventListener"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AAAA;;AAAA,wBACHD,KAAK,CAACE,QAAN,CAAeC,MAAM,CAACC,UAAtB,CADG;AAAA;AAAA,MACtBC,KADsB;AAAA,MACfC,QADe;;AAG7BN,EAAAA,KAAK,CAACO,SAAN,CAAgB,YAAM;AACpB,QAAMC,kBAAkB,GAAG,SAArBA,kBAAqB;AAAA,aAAMF,QAAQ,CAACH,MAAM,CAACC,UAAR,CAAd;AAAA,KAA3B;;AACAD,IAAAA,MAAM,CAACM,gBAAP,CAAwB,QAAxB,EAAkCD,kBAAlC;AACA,WAAO;AAAA,aAAML,MAAM,CAACO,mBAAP,CAA2B,QAA3B,EAAqCF,kBAArC,CAAN;AAAA,KAAP;AACD,GAJD,EAIG,EAJH,EAH6B,CAS7B;;AACA,SAAOH,KAAP;AACD,CAXI;;GAAMJ,W","sourcesContent":["import React from 'react'\n\nexport const useViewport = () => {\n    const [width, setWidth] = React.useState(window.innerWidth);\n  \n    React.useEffect(() => {\n      const handleWindowResize = () => setWidth(window.innerWidth);\n      window.addEventListener(\"resize\", handleWindowResize);\n      return () => window.removeEventListener(\"resize\", handleWindowResize);\n    }, []);\n  \n    // Return the width so we can use it in our components\n    return width\n  }\n\n"]},"metadata":{},"sourceType":"module"}