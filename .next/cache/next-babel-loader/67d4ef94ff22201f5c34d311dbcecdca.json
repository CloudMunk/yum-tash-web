{"ast":null,"code":"var _jsxFileName = \"/Users/cloud/Desktop/Natasha/yumtashweb/yum-tash-web/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport Link from 'next/link';\nimport groq from 'groq';\nimport client from '../client';\nimport BlockContent from '@sanity/block-content-to-react';\nimport DefaultLayout from '../layouts';\nimport imageUrlBuilder from '@sanity/image-url';\nimport dessert from '../public/dessert.jpeg';\n\nfunction urlFor(source) {\n  return imageUrlBuilder(client).image(source);\n}\n\nconst Index = props => {\n  const {\n    introduction = [],\n    posts = [],\n    name\n  } = props;\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, __jsx(DefaultLayout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }), __jsx(\"div\", {\n    style: {\n      backgroundColor: '#E0ECF7',\n      margin: '0 auto',\n      width: '80%',\n      height: '700px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }\n  }, __jsx(\"h1\", {\n    style: {\n      marginLeft: '17%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }, \"Yum Tash Food Lovers Home\"), __jsx(\"div\", {\n    style: {\n      marginTop: '45px',\n      marginLeft: '17%',\n      backgroundColor: '#1C060A',\n      maxWidth: '50vw',\n      minWidth: '50vw',\n      minHeight: '350px',\n      maxHeight: '350px',\n      borderRadius: '10px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    style: {\n      display: 'flex',\n      justifyContent: 'space-around'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 15\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }\n  }, __jsx(\"h3\", {\n    style: {\n      marginLeft: '10px',\n      color: 'white'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 19\n    }\n  }, posts[0].title), __jsx(\"img\", {\n    style: {\n      marginLeft: '10px',\n      marginTop: '30px'\n    },\n    src: urlFor(posts[0].mainImage).width(200).url(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 19\n    }\n  })), __jsx(\"div\", {\n    style: {\n      color: 'white',\n      marginTop: '20px',\n      backgroundColor: '#226666',\n      padding: '5px 20px',\n      minWidth: '24vw',\n      maxWidth: '28vw',\n      maxHeight: '320px',\n      borderRadius: '10px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }\n  }, __jsx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 19\n    }\n  }, \"Description\"), __jsx(\"p\", {\n    style: {\n      color: 'white'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 19\n    }\n  }, \"Author: \", posts[0].name), __jsx(BlockContent // style={{ maxWidth: '100px !important'}}\n  , _extends({\n    blocks: posts[0].introduction // imageOptions={{ w: 300, h: 100, fit: 'max' }}\n\n  }, client.config(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 19\n    }\n  }))))))), __jsx(\"div\", {\n    style: {\n      backgroundColor: '#E0ECF7',\n      margin: '0 auto',\n      width: '80%',\n      height: '500px',\n      display: 'flex',\n      justifyContent: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }, __jsx(\"h2\", {\n    style: {\n      marginRight: '400px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }\n  }, \"SISTE NYTT\")), __jsx(\"img\", {\n    style: {\n      maxHeight: '300px',\n      marginLeft: '100px'\n    },\n    src: dessert,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  })));\n}; // Post.getInitialProps = async function (context) {\n\n\nIndex.getInitialProps = async () => ({\n  posts: await client.fetch(groq`\n      *[_type == \"post\"]{\n        introduction, \n        mainImage, \n        secondImage, \n        title, \n        \"name\": author->name, }\n    `)\n});\n\nexport default Index;\n{\n  /* <div>\n            \n              {posts.map(\n                ({ _id, title = '', slug = '', _updatedAt = '' }) =>\n                  slug && (\n                    <li key={_id}>\n                      <Link href=\"/post/[slug]\" as={`/post/${slug.current}`}>\n                        <a>{title}</a>\n                      </Link>{' '}\n                      ({new Date(_updatedAt).toDateString()})\n                    </li>\n                  )\n              )}\n          </div> */\n}","map":{"version":3,"sources":["/Users/cloud/Desktop/Natasha/yumtashweb/yum-tash-web/pages/index.js"],"names":["Link","groq","client","BlockContent","DefaultLayout","imageUrlBuilder","dessert","urlFor","source","image","Index","props","introduction","posts","name","backgroundColor","margin","width","height","marginLeft","marginTop","maxWidth","minWidth","minHeight","maxHeight","borderRadius","display","justifyContent","color","title","mainImage","url","padding","config","marginRight","getInitialProps","fetch"],"mappings":";;;;;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AAEA,OAAOC,aAAP,MAA0B,YAA1B;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,OAAP,MAAoB,wBAApB;;AAGA,SAASC,MAAT,CAAiBC,MAAjB,EAAyB;AACvB,SAAOH,eAAe,CAACH,MAAD,CAAf,CAAwBO,KAAxB,CAA8BD,MAA9B,CAAP;AACD;;AAED,MAAME,KAAK,GAAIC,KAAD,IAAW;AACrB,QAAM;AACJC,IAAAA,YAAY,GAAG,EADX;AAEJC,IAAAA,KAAK,GAAG,EAFJ;AAGJC,IAAAA;AAHI,MAIFH,KAJJ;AAKA,SACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAKI;AAAK,IAAA,KAAK,EAAE;AAACI,MAAAA,eAAe,EAAE,SAAlB;AAA6BC,MAAAA,MAAM,EAAE,QAArC;AAA+CC,MAAAA,KAAK,EAAE,KAAtD;AAA6DC,MAAAA,MAAM,EAAE;AAArE,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,KAAK,EAAE;AAACC,MAAAA,UAAU,EAAE;AAAb,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCADF,EAEE;AAAK,IAAA,KAAK,EAAE;AACRC,MAAAA,SAAS,EAAE,MADH;AAERD,MAAAA,UAAU,EAAE,KAFJ;AAGRJ,MAAAA,eAAe,EAAE,SAHT;AAIRM,MAAAA,QAAQ,EAAE,MAJF;AAKRC,MAAAA,QAAQ,EAAE,MALF;AAMRC,MAAAA,SAAS,EAAE,OANH;AAORC,MAAAA,SAAS,EAAE,OAPH;AAQRC,MAAAA,YAAY,EAAE;AARN,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAWE;AAAK,IAAA,KAAK,EAAE;AAACC,MAAAA,OAAO,EAAE,MAAV;AAAkBC,MAAAA,cAAc,EAAE;AAAlC,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,KAAK,EAAE;AACLR,MAAAA,UAAU,EAAE,MADP;AAELS,MAAAA,KAAK,EAAE;AAFF,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKKf,KAAK,CAAC,CAAD,CAAL,CAASgB,KALd,CADF,EASE;AACE,IAAA,KAAK,EAAE;AAACV,MAAAA,UAAU,EAAE,MAAb;AAAqBC,MAAAA,SAAS,EAAE;AAAhC,KADT;AAEE,IAAA,GAAG,EAAEb,MAAM,CAACM,KAAK,CAAC,CAAD,CAAL,CAASiB,SAAV,CAAN,CACFb,KADE,CACI,GADJ,EAEFc,GAFE,EAFP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,CADF,EAkBE;AAAM,IAAA,KAAK,EAAE;AACTH,MAAAA,KAAK,EAAE,OADE;AAETR,MAAAA,SAAS,EAAE,MAFF;AAGTL,MAAAA,eAAe,EAAE,SAHR;AAITiB,MAAAA,OAAO,EAAE,UAJA;AAKTV,MAAAA,QAAQ,EAAE,MALD;AAMTD,MAAAA,QAAQ,EAAE,MAND;AAOTG,MAAAA,SAAS,EAAE,OAPF;AAQTC,MAAAA,YAAY,EAAE;AARL,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAXF,EAcE;AAAG,IAAA,KAAK,EAAE;AAACG,MAAAA,KAAK,EAAE;AAAR,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACWf,KAAK,CAAC,CAAD,CAAL,CAASC,IADpB,CAdF,EAiBE,MAAC,YAAD,CACE;AADF;AAEE,IAAA,MAAM,EAAED,KAAK,CAAC,CAAD,CAAL,CAASD,YAFnB,CAGE;;AAHF,KAIMV,MAAM,CAAC+B,MAAP,EAJN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAjBF,CAlBF,CAXF,CAFF,CADF,CALJ,EAuEE;AAAK,IAAA,KAAK,EAAE;AAAClB,MAAAA,eAAe,EAAE,SAAlB;AAA6BC,MAAAA,MAAM,EAAE,QAArC;AAA+CC,MAAAA,KAAK,EAAE,KAAtD;AAA6DC,MAAAA,MAAM,EAAE,OAArE;AAA8EQ,MAAAA,OAAO,EAAE,MAAvF;AAA+FC,MAAAA,cAAc,EAAE;AAA/G,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,KAAK,EAAE;AAACO,MAAAA,WAAW,EAAE;AAAd,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,CADF,EAOE;AACI,IAAA,KAAK,EAAE;AAACV,MAAAA,SAAS,EAAE,OAAZ;AAAqBL,MAAAA,UAAU,EAAE;AAAjC,KADX;AAEI,IAAA,GAAG,EAAEb,OAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CAvEF,CADA;AAuFH,CA7FD,C,CA8FA;;;AAEAI,KAAK,CAACyB,eAAN,GAAwB,aAAa;AACjCtB,EAAAA,KAAK,EAAE,MAAMX,MAAM,CAACkC,KAAP,CAAanC,IAAK;;;;;;;KAAlB;AADoB,CAAb,CAAxB;;AAYA,eAAeS,KAAf;AAEC;AAAC;;;;;;;;;;;;;;AAakB","sourcesContent":["import Link from 'next/link'\nimport groq from 'groq'\nimport client from '../client'\nimport BlockContent from '@sanity/block-content-to-react'\n\nimport DefaultLayout from '../layouts';\nimport imageUrlBuilder from '@sanity/image-url'\nimport dessert from '../public/dessert.jpeg';\n\n\nfunction urlFor (source) {\n  return imageUrlBuilder(client).image(source)\n}\n\nconst Index = (props) => {\n    const { \n      introduction = [],\n      posts = [], \n      name \n    } = props\n    return (\n    <div>\n        <DefaultLayout>\n          \n        </DefaultLayout>\n        {/* FOLD */}\n        <div style={{backgroundColor: '#E0ECF7', margin: '0 auto', width: '80%', height: '700px'}}>\n          <div>\n            <h1 style={{marginLeft: '17%'}}>Yum Tash Food Lovers Home</h1>\n            <div style={{\n                marginTop: '45px',\n                marginLeft: '17%', \n                backgroundColor: '#1C060A', \n                maxWidth: '50vw',\n                minWidth: '50vw',\n                minHeight: '350px',\n                maxHeight: '350px',\n                borderRadius: '10px'\n                }}\n            >\n              <div style={{display: 'flex', justifyContent: 'space-around'}}>\n                <div>\n                  <h3 style={{\n                        marginLeft: '10px',\n                        color: 'white'\n                      }}\n                    >\n                      {posts[0].title}\n                  </h3>\n                  \n                  <img\n                    style={{marginLeft: '10px', marginTop: '30px'}}\n                    src={urlFor(posts[0].mainImage)\n                      .width(200)\n                      .url()}\n                  />\n                </div>\n                {/* CARD */}\n                <div  style={{\n                    color: 'white', \n                    marginTop: '20px', \n                    backgroundColor: '#226666', \n                    padding: '5px 20px', \n                    minWidth: '24vw',\n                    maxWidth: '28vw',\n                    maxHeight: '320px',\n                    borderRadius: '10px'\n                    }}\n                  >\n                  <h2>\n                    Description\n                  </h2>\n                  <p style={{color: 'white'}}>\n                    Author: {posts[0].name}\n                  </p>\n                  <BlockContent\n                    // style={{ maxWidth: '100px !important'}}\n                    blocks={posts[0].introduction}\n                    // imageOptions={{ w: 300, h: 100, fit: 'max' }}\n                    {...client.config()}\n                  />\n                  {/* <p style={{color: 'white', fontSize: '12px'}}>\n                      {introduction}\n                  </p> */}\n                </div>\n              </div>\n              \n            </div>\n          </div>\n          \n      </div>\n      {/* SECOND PART */}\n      <div style={{backgroundColor: '#E0ECF7', margin: '0 auto', width: '80%', height: '500px', display: 'flex', justifyContent: 'center'}}>\n        <div>\n          <h2 style={{marginRight: '400px'}}>\n            SISTE NYTT\n          </h2>\n            \n        </div>\n        <img\n            style={{maxHeight: '300px', marginLeft: '100px'}}\n            src={dessert}\n        />\n      </div>  \n    </div>\n      \n    )\n}\n// Post.getInitialProps = async function (context) {\n\nIndex.getInitialProps = async () => ({\n    posts: await client.fetch(groq`\n      *[_type == \"post\"]{\n        introduction, \n        mainImage, \n        secondImage, \n        title, \n        \"name\": author->name, }\n    `)\n})\n\n\nexport default Index\n\n {/* <div>\n            \n              {posts.map(\n                ({ _id, title = '', slug = '', _updatedAt = '' }) =>\n                  slug && (\n                    <li key={_id}>\n                      <Link href=\"/post/[slug]\" as={`/post/${slug.current}`}>\n                        <a>{title}</a>\n                      </Link>{' '}\n                      ({new Date(_updatedAt).toDateString()})\n                    </li>\n                  )\n              )}\n          </div> */}"]},"metadata":{},"sourceType":"module"}