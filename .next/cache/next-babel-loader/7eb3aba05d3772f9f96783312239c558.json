{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/cloud/Desktop/Natasha/yumtashweb/yum-tash-web/pages/countries/[slug].js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"*[_type == \\\"post\\\" && slug.current == $slug][0]{\\n    title,\\n    \\\"name\\\": author->name,\\n    \\\"categories\\\": categories[]->title,\\n    \\\"authorImage\\\": author->image,\\n    mainImage,\\n    countryImage\\n    introduction\\n  }\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport groq from 'groq';\nimport imageUrlBuilder from '@sanity/image-url';\nimport BlockContent from '@sanity/block-content-to-react';\nimport client from '../../client';\nimport Header from '../../components/menu/menu.component';\nimport Footer from '../../components/footer/footer.component';\nimport styles from './countries.module.scss';\n\nfunction urlFor(source) {\n  return imageUrlBuilder(client).image(source);\n}\n\nvar Countries = function Countries(props) {\n  console.log(props);\n  var _props$title = props.title,\n      title = _props$title === void 0 ? 'Missing title' : _props$title,\n      _props$name = props.name,\n      name = _props$name === void 0 ? 'Missing name' : _props$name,\n      _props$categories = props.categories,\n      categories = _props$categories === void 0 ? [] : _props$categories,\n      mainImage = props.mainImage,\n      introduction = props.introduction;\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, __jsx(Header, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }), __jsx(\"div\", {\n    className: styles.layoutCountries,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: styles.countryCard,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }\n  }, __jsx(\"img\", {\n    className: styles.mainImage,\n    src: urlFor(mainImage).width(500).url(),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 21\n    }\n  }))), __jsx(Footer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }));\n};\n\n_c = Countries;\nvar query = groq(_templateObject());\n\nCountries.getInitialProps = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(context) {\n    var _context$query$slug, slug;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            // It's important to default the slug so that it doesn't return \"undefined\"\n            _context$query$slug = context.query.slug, slug = _context$query$slug === void 0 ? \"\" : _context$query$slug;\n            _context.next = 3;\n            return client.fetch(query, {\n              slug: slug\n            });\n\n          case 3:\n            return _context.abrupt(\"return\", _context.sent);\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexport default Countries;\n\nvar _c;\n\n$RefreshReg$(_c, \"Countries\");","map":{"version":3,"sources":["/Users/cloud/Desktop/Natasha/yumtashweb/yum-tash-web/pages/countries/[slug].js"],"names":["groq","imageUrlBuilder","BlockContent","client","Header","Footer","styles","urlFor","source","image","Countries","props","console","log","title","name","categories","mainImage","introduction","layoutCountries","countryCard","width","url","query","getInitialProps","context","slug","fetch"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,IAAP,MAAiB,MAAjB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AAEA,OAAOC,MAAP,MAAmB,sCAAnB;AACA,OAAOC,MAAP,MAAmB,0CAAnB;AAEA,OAAOC,MAAP,MAAmB,yBAAnB;;AAEA,SAASC,MAAT,CAAiBC,MAAjB,EAAyB;AACrB,SAAOP,eAAe,CAACE,MAAD,CAAf,CAAwBM,KAAxB,CAA8BD,MAA9B,CAAP;AACD;;AAGD,IAAME,SAAS,GAAG,SAAZA,SAAY,CAACC,KAAD,EAAW;AAC3BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AAD2B,qBASvBA,KATuB,CAGzBG,KAHyB;AAAA,MAGzBA,KAHyB,6BAGjB,eAHiB;AAAA,oBASvBH,KATuB,CAIzBI,IAJyB;AAAA,MAIzBA,IAJyB,4BAIlB,cAJkB;AAAA,0BASvBJ,KATuB,CAKzBK,UALyB;AAAA,MAKzBA,UALyB,kCAKZ,EALY;AAAA,MAMzBC,SANyB,GASvBN,KATuB,CAMzBM,SANyB;AAAA,MAOzBC,YAPyB,GASvBP,KATuB,CAOzBO,YAPyB;AAU3B,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEM;AAAK,IAAA,SAAS,EAAEZ,MAAM,CAACa,eAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAEb,MAAM,CAACc,WAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AACI,IAAA,SAAS,EAAEd,MAAM,CAACW,SADtB;AAEI,IAAA,GAAG,EAAEV,MAAM,CAACU,SAAD,CAAN,CACJI,KADI,CACE,GADF,EAEJC,GAFI,EAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,CAFN,EAYE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZF,CADF;AAiBD,CA3BD;;KAAMZ,S;AA6BN,IAAMa,KAAK,GAAGvB,IAAH,mBAAX;;AAUAU,SAAS,CAACc,eAAV;AAAA,sEAA4B,iBAAgBC,OAAhB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAC1B;AAD0B,kCAEJA,OAAO,CAACF,KAFJ,CAElBG,IAFkB,EAElBA,IAFkB,oCAEX,EAFW;AAAA;AAAA,mBAGbvB,MAAM,CAACwB,KAAP,CAAaJ,KAAb,EAAoB;AAAEG,cAAAA,IAAI,EAAJA;AAAF,aAApB,CAHa;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA5B;;AAAA;AAAA;AAAA;AAAA;;AAMA,eAAehB,SAAf","sourcesContent":["import groq from 'groq'\nimport imageUrlBuilder from '@sanity/image-url'\nimport BlockContent from '@sanity/block-content-to-react'\nimport client from '../../client'\n\nimport Header from '../../components/menu/menu.component'\nimport Footer from '../../components/footer/footer.component'\n\nimport styles from './countries.module.scss'\n\nfunction urlFor (source) {\n    return imageUrlBuilder(client).image(source)\n  }\n\n\n  const Countries = (props) => {\n    console.log(props)\n    const {\n      title = 'Missing title',\n      name = 'Missing name',\n      categories = [],\n      mainImage,\n      introduction\n      \n    } = props\n    return (\n      <div>\n        <Header />\n            <div className={styles.layoutCountries}>\n                <div className={styles.countryCard}>\n                    <img \n                        className={styles.mainImage}\n                        src={urlFor(mainImage)\n                        .width(500)\n                        .url()} \n                    />\n                </div>\n            </div>\n        <Footer />\n      </div>\n        \n    )\n  }\n  \n  const query = groq`*[_type == \"post\" && slug.current == $slug][0]{\n    title,\n    \"name\": author->name,\n    \"categories\": categories[]->title,\n    \"authorImage\": author->image,\n    mainImage,\n    countryImage\n    introduction\n  }`\n  \n  Countries.getInitialProps = async function (context) {\n    // It's important to default the slug so that it doesn't return \"undefined\"\n    const { slug = \"\" } = context.query\n    return await client.fetch(query, { slug })\n  }\n  \n  export default Countries"]},"metadata":{},"sourceType":"module"}