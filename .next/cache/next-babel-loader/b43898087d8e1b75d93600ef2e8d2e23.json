{"ast":null,"code":"var _jsxFileName = \"/Users/cloud/Desktop/Natasha/yumtashweb/yum-tash-web/pages/post/[slug].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport groq from 'groq';\nimport imageUrlBuilder from '@sanity/image-url';\nimport BlockContent from '@sanity/block-content-to-react';\nimport client from '../../client';\nimport styles from './slug.module.scss'; // Components\n\nimport Header from '../../components/menu/menu.component';\n\nfunction urlFor(source) {\n  return imageUrlBuilder(client).image(source);\n}\n\nconst Post = props => {\n  console.log(props);\n  const {\n    title = 'Missing title',\n    name = 'Missing name',\n    categories,\n    authorImage,\n    mainImage,\n    body = [],\n    introduction = [],\n    titleA,\n    ingredientsA = []\n  } = props;\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, __jsx(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }), __jsx(\"article\", {\n    className: styles.body,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }), __jsx(\"div\", {\n    className: styles.leftSide,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, __jsx(\"h1\", {\n    className: styles.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }\n  }, title), __jsx(\"img\", {\n    className: styles.mainImage,\n    src: urlFor(mainImage).width(500).url(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  }), __jsx(BlockContent, _extends({\n    className: styles.introduction,\n    blocks: introduction,\n    imageOptions: {\n      w: 320,\n      h: 240,\n      fit: 'max'\n    }\n  }, client.config(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  })), __jsx(\"div\", {\n    className: styles.ingredients,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 15\n    }\n  }, __jsx(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  }, titleA), __jsx(BlockContent, _extends({\n    className: styles.ingredientsA,\n    blocks: ingredientsA,\n    imageOptions: {\n      w: 320,\n      h: 240,\n      fit: 'max'\n    }\n  }, client.config(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }\n  }))), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 15\n    }\n  }, __jsx(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 15\n    }\n  }, titleB), __jsx(BlockContent, _extends({\n    className: styles.ingredientsA,\n    blocks: ingredientsB,\n    imageOptions: {\n      w: 320,\n      h: 240,\n      fit: 'max'\n    }\n  }, client.config(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  }))), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 15\n    }\n  }, __jsx(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 15\n    }\n  }, titleC), __jsx(BlockContent, _extends({\n    className: styles.ingredientsA,\n    blocks: ingredientsC,\n    imageOptions: {\n      w: 320,\n      h: 240,\n      fit: 'max'\n    }\n  }, client.config(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 15\n    }\n  }))), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 15\n    }\n  }, __jsx(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 15\n    }\n  }, titleD), __jsx(BlockContent, _extends({\n    className: styles.ingredientsA,\n    blocks: ingredientsD,\n    imageOptions: {\n      w: 320,\n      h: 240,\n      fit: 'max'\n    }\n  }, client.config(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 17\n    }\n  })))), __jsx(BlockContent, _extends({\n    className: styles.paragraph,\n    blocks: body,\n    imageOptions: {\n      w: 320,\n      h: 240,\n      fit: 'max'\n    }\n  }, client.config(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  }))), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }, __jsx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  }, \"This is the right side\"), categories && __jsx(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  }, \"Stikkord / Hashtags\", categories.map(category => __jsx(\"p\", {\n    key: category,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 43\n    }\n  }, category))), authorImage && __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }\n  }, __jsx(\"img\", {\n    className: styles.profilePic,\n    src: urlFor(authorImage).width(100).url(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 15\n    }\n  })), __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 11\n    }\n  }, \"Av \", name))));\n};\n\nconst query = groq`*[_type == \"post\" && slug.current == $slug][0]{\n  title,\n  \"name\": author->name,\n  \"categories\": categories[]->title,\n  \"authorImage\": author->image,\n  mainImage,\n  introduction,\n  titleA,\n  ingredientsA,\n  body\n}`;\n\nPost.getInitialProps = async function (context) {\n  // It's important to default the slug so that it doesn't return \"undefined\"\n  const {\n    slug = \"\"\n  } = context.query;\n  return await client.fetch(query, {\n    slug\n  });\n};\n\nexport default Post;","map":{"version":3,"sources":["/Users/cloud/Desktop/Natasha/yumtashweb/yum-tash-web/pages/post/[slug].js"],"names":["groq","imageUrlBuilder","BlockContent","client","styles","Header","urlFor","source","image","Post","props","console","log","title","name","categories","authorImage","mainImage","body","introduction","titleA","ingredientsA","leftSide","width","url","w","h","fit","config","ingredients","titleB","ingredientsB","titleC","ingredientsC","titleD","ingredientsD","paragraph","map","category","profilePic","query","getInitialProps","context","slug","fetch"],"mappings":";;;;;;AAAA,OAAOA,IAAP,MAAiB,MAAjB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AAEA,OAAOC,MAAP,MAAmB,oBAAnB,C,CAEA;;AACA,OAAOC,MAAP,MAAmB,sCAAnB;;AAIA,SAASC,MAAT,CAAiBC,MAAjB,EAAyB;AACvB,SAAON,eAAe,CAACE,MAAD,CAAf,CAAwBK,KAAxB,CAA8BD,MAA9B,CAAP;AACD;;AAED,MAAME,IAAI,GAAIC,KAAD,IAAW;AACtBC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,QAAM;AACJG,IAAAA,KAAK,GAAG,eADJ;AAEJC,IAAAA,IAAI,GAAG,cAFH;AAGJC,IAAAA,UAHI;AAIJC,IAAAA,WAJI;AAKJC,IAAAA,SALI;AAMJC,IAAAA,IAAI,GAAG,EANH;AAOJC,IAAAA,YAAY,GAAG,EAPX;AAQJC,IAAAA,MARI;AASJC,IAAAA,YAAY,GAAG;AATX,MAUFX,KAVJ;AAWA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAS,IAAA,SAAS,EAAEN,MAAM,CAACc,IAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAK,IAAA,SAAS,EAAEd,MAAM,CAACkB,QAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAElB,MAAM,CAACS,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA8BA,KAA9B,CADF,EAEE;AACI,IAAA,SAAS,EAAET,MAAM,CAACa,SADtB;AAEI,IAAA,GAAG,EAAEX,MAAM,CAACW,SAAD,CAAN,CACJM,KADI,CACE,GADF,EAEJC,GAFI,EAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAWE,MAAC,YAAD;AACE,IAAA,SAAS,EAAEpB,MAAM,CAACe,YADpB;AAEE,IAAA,MAAM,EAAEA,YAFV;AAGE,IAAA,YAAY,EAAE;AAAEM,MAAAA,CAAC,EAAE,GAAL;AAAUC,MAAAA,CAAC,EAAE,GAAb;AAAkBC,MAAAA,GAAG,EAAE;AAAvB;AAHhB,KAIMxB,MAAM,CAACyB,MAAP,EAJN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAXF,EAiBE;AAAK,IAAA,SAAS,EAAExB,MAAM,CAACyB,WAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKT,MAAL,CADF,EAEE,MAAC,YAAD;AACE,IAAA,SAAS,EAAEhB,MAAM,CAACiB,YADpB;AAEE,IAAA,MAAM,EAAEA,YAFV;AAGE,IAAA,YAAY,EAAE;AAAEI,MAAAA,CAAC,EAAE,GAAL;AAAUC,MAAAA,CAAC,EAAE,GAAb;AAAkBC,MAAAA,GAAG,EAAE;AAAvB;AAHhB,KAIMxB,MAAM,CAACyB,MAAP,EAJN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAFF,CADJ,EAUI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKE,MAAL,CADA,EAEE,MAAC,YAAD;AACE,IAAA,SAAS,EAAE1B,MAAM,CAACiB,YADpB;AAEE,IAAA,MAAM,EAAEU,YAFV;AAGE,IAAA,YAAY,EAAE;AAAEN,MAAAA,CAAC,EAAE,GAAL;AAAUC,MAAAA,CAAC,EAAE,GAAb;AAAkBC,MAAAA,GAAG,EAAE;AAAvB;AAHhB,KAIMxB,MAAM,CAACyB,MAAP,EAJN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAFF,CAVJ,EAmBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKI,MAAL,CADA,EAEA,MAAC,YAAD;AACI,IAAA,SAAS,EAAE5B,MAAM,CAACiB,YADtB;AAEI,IAAA,MAAM,EAAEY,YAFZ;AAGI,IAAA,YAAY,EAAE;AAAER,MAAAA,CAAC,EAAE,GAAL;AAAUC,MAAAA,CAAC,EAAE,GAAb;AAAkBC,MAAAA,GAAG,EAAE;AAAvB;AAHlB,KAIQxB,MAAM,CAACyB,MAAP,EAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAFA,CAnBJ,EA4BI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKM,MAAL,CADA,EAEE,MAAC,YAAD;AACI,IAAA,SAAS,EAAE9B,MAAM,CAACiB,YADtB;AAEI,IAAA,MAAM,EAAEc,YAFZ;AAGI,IAAA,YAAY,EAAE;AAAEV,MAAAA,CAAC,EAAE,GAAL;AAAUC,MAAAA,CAAC,EAAE,GAAb;AAAkBC,MAAAA,GAAG,EAAE;AAAvB;AAHlB,KAIQxB,MAAM,CAACyB,MAAP,EAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAFF,CA5BJ,CAjBF,EAuDE,MAAC,YAAD;AACE,IAAA,SAAS,EAAExB,MAAM,CAACgC,SADpB;AAEE,IAAA,MAAM,EAAElB,IAFV;AAGE,IAAA,YAAY,EAAE;AAAEO,MAAAA,CAAC,EAAE,GAAL;AAAUC,MAAAA,CAAC,EAAE,GAAb;AAAkBC,MAAAA,GAAG,EAAE;AAAvB;AAHhB,KAIMxB,MAAM,CAACyB,MAAP,EAJN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAvDF,CAFF,EAgEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADJ,EAEKb,UAAU,IACX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAEGA,UAAU,CAACsB,GAAX,CAAeC,QAAQ,IAAI;AAAG,IAAA,GAAG,EAAEA,QAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmBA,QAAnB,CAA3B,CAFH,CAHJ,EAQItB,WAAW,IACX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,SAAS,EAAEZ,MAAM,CAACmC,UADpB;AAEE,IAAA,GAAG,EAAEjC,MAAM,CAACU,WAAD,CAAN,CACFO,KADE,CACI,GADJ,EAEFC,GAFE,EAFP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CATJ,EAkBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAUV,IAAV,CAlBF,CAhEF,CAFF,CADF;AA4FD,CAzGD;;AA2GA,MAAM0B,KAAK,GAAGxC,IAAK;;;;;;;;;;EAAnB;;AAYAS,IAAI,CAACgC,eAAL,GAAuB,gBAAgBC,OAAhB,EAAyB;AAC9C;AACA,QAAM;AAAEC,IAAAA,IAAI,GAAG;AAAT,MAAgBD,OAAO,CAACF,KAA9B;AACA,SAAO,MAAMrC,MAAM,CAACyC,KAAP,CAAaJ,KAAb,EAAoB;AAAEG,IAAAA;AAAF,GAApB,CAAb;AACD,CAJD;;AAMA,eAAelC,IAAf","sourcesContent":["import groq from 'groq'\nimport imageUrlBuilder from '@sanity/image-url'\nimport BlockContent from '@sanity/block-content-to-react'\nimport client from '../../client'\n\nimport styles from './slug.module.scss'\n\n// Components\nimport Header from '../../components/menu/menu.component';\n\n\n\nfunction urlFor (source) {\n  return imageUrlBuilder(client).image(source)\n}\n\nconst Post = (props) => {\n  console.log(props)\n  const {\n    title = 'Missing title',\n    name = 'Missing name',\n    categories,\n    authorImage,\n    mainImage,\n    body = [],\n    introduction = [],\n    titleA,\n    ingredientsA = []\n  } = props\n  return (\n    <div>\n      <Header />\n      <article className={styles.body}>\n        <div></div>\n        <div className={styles.leftSide}>\n          <h1 className={styles.title}>{title}</h1>\n          <img\n              className={styles.mainImage}\n              src={urlFor(mainImage)\n              .width(500)\n              .url()}\n          />\n          \n          \n         \n          <BlockContent\n            className={styles.introduction}\n            blocks={introduction}\n            imageOptions={{ w: 320, h: 240, fit: 'max' }}\n            {...client.config()}\n          />\n          <div className={styles.ingredients}>\n              <div>\n                <h3>{titleA}</h3>\n                <BlockContent\n                  className={styles.ingredientsA}\n                  blocks={ingredientsA}\n                  imageOptions={{ w: 320, h: 240, fit: 'max' }}\n                  {...client.config()}\n                />\n              </div>\n              <div>\n              <h3>{titleB}</h3>\n                <BlockContent\n                  className={styles.ingredientsA}\n                  blocks={ingredientsB}\n                  imageOptions={{ w: 320, h: 240, fit: 'max' }}\n                  {...client.config()}\n                />\n              </div>\n              <div>\n              <h3>{titleC}</h3>\n              <BlockContent\n                  className={styles.ingredientsA}\n                  blocks={ingredientsC}\n                  imageOptions={{ w: 320, h: 240, fit: 'max' }}\n                  {...client.config()}\n                />\n              </div>\n              <div>\n              <h3>{titleD}</h3>\n                <BlockContent\n                    className={styles.ingredientsA}\n                    blocks={ingredientsD}\n                    imageOptions={{ w: 320, h: 240, fit: 'max' }}\n                    {...client.config()}\n                  />\n              </div>\n          </div>\n          <BlockContent\n            className={styles.paragraph}\n            blocks={body}\n            imageOptions={{ w: 320, h: 240, fit: 'max' }}\n            {...client.config()}\n          />\n        </div>\n        <div>\n            <h2>This is the right side</h2>\n            {categories && (\n            <ul>\n              Stikkord / Hashtags\n              {categories.map(category => <p key={category}>{category}</p>)}\n            </ul>\n          )}\n           {authorImage && (\n            <div>\n              <img\n                className={styles.profilePic}\n                src={urlFor(authorImage)\n                  .width(100)\n                  .url()}\n              />\n            </div>\n          )}\n          <span>Av {name}</span>\n        </div>\n        \n      </article>\n    </div>\n      \n  )\n}\n\nconst query = groq`*[_type == \"post\" && slug.current == $slug][0]{\n  title,\n  \"name\": author->name,\n  \"categories\": categories[]->title,\n  \"authorImage\": author->image,\n  mainImage,\n  introduction,\n  titleA,\n  ingredientsA,\n  body\n}`\n\nPost.getInitialProps = async function (context) {\n  // It's important to default the slug so that it doesn't return \"undefined\"\n  const { slug = \"\" } = context.query\n  return await client.fetch(query, { slug })\n}\n\nexport default Post"]},"metadata":{},"sourceType":"module"}