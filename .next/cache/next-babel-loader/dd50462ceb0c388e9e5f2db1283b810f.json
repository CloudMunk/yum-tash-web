{"ast":null,"code":"var _jsxFileName = \"/Users/cloud/Desktop/Natasha/yumtashweb/yum-tash-web/pages/countries/[slug].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport groq from 'groq';\nimport imageUrlBuilder from '@sanity/image-url';\nimport BlockContent from '@sanity/block-content-to-react';\nimport client from '../../client';\nimport Header from '../../components/menu/menu.component';\nimport Footer from '../../components/footer/footer.component';\nimport styles from './countries.module.scss';\n\nfunction urlFor(source) {\n  return imageUrlBuilder(client).image(source);\n}\n\nconst Countries = props => {\n  console.log(props);\n  const {\n    title = 'Missing title',\n    name = 'Missing name',\n    categories = [],\n    mainImage,\n    introduction\n  } = props;\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, __jsx(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }), __jsx(\"div\", {\n    className: styles.layoutCountries,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: styles.countryCard,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }\n  }, __jsx(\"img\", {\n    className: styles.mainImage,\n    src: urlFor(mainImage).width(500).url(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 21\n    }\n  }))), __jsx(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }));\n};\n\nconst query = groq`*[_type == \"post\" && slug.current == $slug][0]{\n    title,\n    \"name\": author->name,\n    \"categories\": categories[]->title,\n    \"authorImage\": author->image,\n    mainImage,\n    countryImage\n    introduction\n  }`;\n\nCountries.getInitialProps = async function (context) {\n  // It's important to default the slug so that it doesn't return \"undefined\"\n  const {\n    slug = \"\"\n  } = context.query;\n  return await client.fetch(query, {\n    slug\n  });\n};\n\nexport default Countries;","map":{"version":3,"sources":["/Users/cloud/Desktop/Natasha/yumtashweb/yum-tash-web/pages/countries/[slug].js"],"names":["groq","imageUrlBuilder","BlockContent","client","Header","Footer","styles","urlFor","source","image","Countries","props","console","log","title","name","categories","mainImage","introduction","layoutCountries","countryCard","width","url","query","getInitialProps","context","slug","fetch"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,MAAjB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AAEA,OAAOC,MAAP,MAAmB,sCAAnB;AACA,OAAOC,MAAP,MAAmB,0CAAnB;AAEA,OAAOC,MAAP,MAAmB,yBAAnB;;AAEA,SAASC,MAAT,CAAiBC,MAAjB,EAAyB;AACrB,SAAOP,eAAe,CAACE,MAAD,CAAf,CAAwBM,KAAxB,CAA8BD,MAA9B,CAAP;AACD;;AAGD,MAAME,SAAS,GAAIC,KAAD,IAAW;AAC3BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,QAAM;AACJG,IAAAA,KAAK,GAAG,eADJ;AAEJC,IAAAA,IAAI,GAAG,cAFH;AAGJC,IAAAA,UAAU,GAAG,EAHT;AAIJC,IAAAA,SAJI;AAKJC,IAAAA;AALI,MAOFP,KAPJ;AAQA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEM;AAAK,IAAA,SAAS,EAAEL,MAAM,CAACa,eAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAEb,MAAM,CAACc,WAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AACI,IAAA,SAAS,EAAEd,MAAM,CAACW,SADtB;AAEI,IAAA,GAAG,EAAEV,MAAM,CAACU,SAAD,CAAN,CACJI,KADI,CACE,GADF,EAEJC,GAFI,EAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,CAFN,EAYE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZF,CADF;AAiBD,CA3BD;;AA6BA,MAAMC,KAAK,GAAGvB,IAAK;;;;;;;;IAAnB;;AAUAU,SAAS,CAACc,eAAV,GAA4B,gBAAgBC,OAAhB,EAAyB;AACnD;AACA,QAAM;AAAEC,IAAAA,IAAI,GAAG;AAAT,MAAgBD,OAAO,CAACF,KAA9B;AACA,SAAO,MAAMpB,MAAM,CAACwB,KAAP,CAAaJ,KAAb,EAAoB;AAAEG,IAAAA;AAAF,GAApB,CAAb;AACD,CAJD;;AAMA,eAAehB,SAAf","sourcesContent":["import groq from 'groq'\nimport imageUrlBuilder from '@sanity/image-url'\nimport BlockContent from '@sanity/block-content-to-react'\nimport client from '../../client'\n\nimport Header from '../../components/menu/menu.component'\nimport Footer from '../../components/footer/footer.component'\n\nimport styles from './countries.module.scss'\n\nfunction urlFor (source) {\n    return imageUrlBuilder(client).image(source)\n  }\n\n\n  const Countries = (props) => {\n    console.log(props)\n    const {\n      title = 'Missing title',\n      name = 'Missing name',\n      categories = [],\n      mainImage,\n      introduction\n      \n    } = props\n    return (\n      <div>\n        <Header />\n            <div className={styles.layoutCountries}>\n                <div className={styles.countryCard}>\n                    <img \n                        className={styles.mainImage}\n                        src={urlFor(mainImage)\n                        .width(500)\n                        .url()} \n                    />\n                </div>\n            </div>\n        <Footer />\n      </div>\n        \n    )\n  }\n  \n  const query = groq`*[_type == \"post\" && slug.current == $slug][0]{\n    title,\n    \"name\": author->name,\n    \"categories\": categories[]->title,\n    \"authorImage\": author->image,\n    mainImage,\n    countryImage\n    introduction\n  }`\n  \n  Countries.getInitialProps = async function (context) {\n    // It's important to default the slug so that it doesn't return \"undefined\"\n    const { slug = \"\" } = context.query\n    return await client.fetch(query, { slug })\n  }\n  \n  export default Countries"]},"metadata":{},"sourceType":"module"}