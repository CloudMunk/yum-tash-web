{"ast":null,"code":"var _jsxFileName = \"/Users/cloud/Desktop/Natasha/yumtashweb/yum-tash-web/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Link from 'next/link';\nimport groq from 'groq';\nimport client from '../client';\nimport DefaultLayout from '../layouts';\n\nfunction urlFor(source) {\n  return imageUrlBuilder(client).image(source);\n}\n\nconst Index = props => {\n  const {\n    posts = []\n  } = props;\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }\n  }, __jsx(DefaultLayout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }\n  }), __jsx(\"div\", {\n    style: {\n      backgroundColor: 'grey',\n      height: '500px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }, \"Yum Tash Food Lovers Home\"), posts.map(({\n    _id,\n    title = '',\n    slug = '',\n    _updatedAt = ''\n  }) => slug && __jsx(\"li\", {\n    key: _id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 15\n    }\n  }, __jsx(Link, {\n    href: \"/post/[slug]\",\n    as: `/post/${slug.current}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 17\n    }\n  }, __jsx(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 19\n    }\n  }, title)), ' ', \"(\", new Date(_updatedAt).toDateString(), \")\"))), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, __jsx(\"img\", {\n    src: urlFor('../assets.dessert.jpeg').width(50).url(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  })));\n};\n\nIndex.getInitialProps = async () => ({\n  posts: await client.fetch(groq`\n      *[_type == \"post\" && publishedAt < now()]|order(publishedAt desc)\n    `)\n});\n\nexport default Index;","map":{"version":3,"sources":["/Users/cloud/Desktop/Natasha/yumtashweb/yum-tash-web/pages/index.js"],"names":["Link","groq","client","DefaultLayout","urlFor","source","imageUrlBuilder","image","Index","props","posts","backgroundColor","height","map","_id","title","slug","_updatedAt","current","Date","toDateString","width","url","getInitialProps","fetch"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AAEA,OAAOC,aAAP,MAA0B,YAA1B;;AAEA,SAASC,MAAT,CAAiBC,MAAjB,EAAyB;AACvB,SAAOC,eAAe,CAACJ,MAAD,CAAf,CAAwBK,KAAxB,CAA8BF,MAA9B,CAAP;AACD;;AAED,MAAMG,KAAK,GAAIC,KAAD,IAAW;AACrB,QAAM;AAAEC,IAAAA,KAAK,GAAG;AAAV,MAAiBD,KAAvB;AACA,SACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAIE;AAAK,IAAA,KAAK,EAAE;AAACE,MAAAA,eAAe,EAAE,MAAlB;AAA0BC,MAAAA,MAAM,EAAE;AAAlC,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCADA,EAEGF,KAAK,CAACG,GAAN,CACC,CAAC;AAAEC,IAAAA,GAAF;AAAOC,IAAAA,KAAK,GAAG,EAAf;AAAmBC,IAAAA,IAAI,GAAG,EAA1B;AAA8BC,IAAAA,UAAU,GAAG;AAA3C,GAAD,KACED,IAAI,IACF;AAAI,IAAA,GAAG,EAAEF,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,cAAX;AAA0B,IAAA,EAAE,EAAG,SAAQE,IAAI,CAACE,OAAQ,EAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIH,KAAJ,CADF,CADF,EAGU,GAHV,OAII,IAAII,IAAJ,CAASF,UAAT,EAAqBG,YAArB,EAJJ,MAHL,CAFH,CAJF,EAkBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACM;AACE,IAAA,GAAG,EAAEhB,MAAM,CAAC,wBAAD,CAAN,CACFiB,KADE,CACI,EADJ,EAEFC,GAFE,EADP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADN,CAlBF,CADA;AA8BH,CAhCD;;AAkCAd,KAAK,CAACe,eAAN,GAAwB,aAAa;AACjCb,EAAAA,KAAK,EAAE,MAAMR,MAAM,CAACsB,KAAP,CAAavB,IAAK;;KAAlB;AADoB,CAAb,CAAxB;;AAMA,eAAeO,KAAf","sourcesContent":["import Link from 'next/link'\nimport groq from 'groq'\nimport client from '../client'\n\nimport DefaultLayout from '../layouts';\n\nfunction urlFor (source) {\n  return imageUrlBuilder(client).image(source)\n}\n\nconst Index = (props) => {\n    const { posts = [] } = props\n    return (\n    <div>\n      <DefaultLayout>\n        \n      </DefaultLayout>\n      <div style={{backgroundColor: 'grey', height: '500px'}}>\n      <h1>Yum Tash Food Lovers Home</h1>\n        {posts.map(\n          ({ _id, title = '', slug = '', _updatedAt = '' }) =>\n            slug && (\n              <li key={_id}>\n                <Link href=\"/post/[slug]\" as={`/post/${slug.current}`}>\n                  <a>{title}</a>\n                </Link>{' '}\n                ({new Date(_updatedAt).toDateString()})\n              </li>\n            )\n        )}\n      </div>\n      <div>\n            <img\n              src={urlFor('../assets.dessert.jpeg')\n                .width(50)\n                .url()}\n            />\n          </div>\n     \n    </div>\n      \n    )\n}\n\nIndex.getInitialProps = async () => ({\n    posts: await client.fetch(groq`\n      *[_type == \"post\" && publishedAt < now()]|order(publishedAt desc)\n    `)\n})\n\nexport default Index"]},"metadata":{},"sourceType":"module"}